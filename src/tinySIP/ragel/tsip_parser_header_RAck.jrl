/*
* Copyright (C) 2012 Doubango Telecom <http://www.doubango.org>
*
* Contact: Mamadou Diop <diopmamadou(at)doubango[dot]org>
*	
* This file is part of Open Source sipML5 solution <http://www.sipml5.org>
*
* sipML5 is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as publishd by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*	
* sipML5 is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*	
* You should have received a copy of the GNU General Public License
* along with sipML5.
*/
tsip_header_RAck.prototype = Object.create(tsip_header.prototype);
%%{
	machine tsip_machine_parser_header_RAck;

	# Includes
	include tsip_machine_utils "./tsip_machine_utils.jrl";
	
	action tag{
		i_tag_start = p;
	}
	
	action parse_seq{
	    hdr_rack.i_seq = tsk_ragel_parser_get_int(s_str, p, i_tag_start);
	}

	action parse_cseq{
	    hdr_rack.i_cseq = tsk_ragel_parser_get_int(s_str, p, i_tag_start);
	}

	action parse_method{
	    hdr_rack.s_method= tsk_ragel_parser_get_string(s_str, p, i_tag_start);
	}

	action eob{
	}
	
	RAck = "RAck"i HCOLON DIGIT+>tag %parse_seq LWS DIGIT+>tag %parse_cseq LWS Method>tag %parse_method;
	
	# Entry point
	main := RAck :>CRLF @eob;

}%%

%%write data;

function tsip_header_RAck(i_seq, i_cseq, s_method){
	tsip_header.call(this, tsip_header_type_e.RAck);
    this.i_seq = i_seq;
    this.i_cseq = i_cseq;
    this.s_method = s_method;
}

tsip_header_RAck.prototype.toString = function(){
    return tsk_string_format("{0} {1} {2}",
        this.i_seq, this.i_cseq, this.s_method);
};

tsip_header_RAck.prototype.Parse = function(s_str){
    var cs = 0;
	var p = 0;
	var pe = s_str.length;
	var eof = pe;
	var data = tsk_buff_str2ib(s_str);
	var i_tag_start;	
	var hdr_rack = new tsip_header_RAck(0, 0, null);
	
	%%write init;
	%%write exec;
	
	if( cs < %%{ write first_final; }%% ){
		tsk_utils_log_error("Failed to parse 'RAck' header: " + s_str);
		return null;
	}
	
	return hdr_rack;
}